generator client {
  provider = "prisma-client-js"
  output   = "../backend/node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  curatelados Curatelado[]
}

model Curatelado {
  id        String   @id @default(uuid())
  nome      String
  cpf       String   @unique
  dataNascimento DateTime?
  email     String?
  telefone  String?
  endereco  String?
  User   User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  documents Document[]
}

model Tarefa {
  id        String   @id @default(uuid())
  titulo      String
  descricao   String?
  dataCriacao DateTime @default(now())
  dataConclusao DateTime?
  status      String @default("Pendente")
  prioridade  String?
  anotacoes   String?
  tags        String?
  arquivosAnexos String?
  subtarefas Tarefa[] @relation(name: "Subtarefas")
  tarefa Tarefa? @relation(name: "Subtarefas", fields: [tarefaId], references: [id])
  tarefaId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Obrigacao {
  id        String   @id @default(uuid())
  titulo      String
  descricao   String?
  dataCriacao DateTime @default(now())
  dataConclusao DateTime?
  status      String @default("Pendente")
  prioridade  String?
  anotacoes   String?
  tags        String?
  arquivosAnexos String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Document {
  id        String   @id @default(uuid())
  filename  String
  filepath  String
  curatelado   Curatelado @relation(fields: [curateladoId], references: [id])
  curateladoId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
